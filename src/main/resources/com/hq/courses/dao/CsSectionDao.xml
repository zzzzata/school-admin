<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hq.courses.dao.CsSectionDao">

		
	<!-- 通用查询表头 -->
	<sql id="base_column">
		cs_section.section_id AS sectionId,
		cs_section.section_name AS sectionName,
		cs_section.section_no AS sectionNo,
		cs_section.chapter_id AS chapterId,
		cs_section.course_id AS courseId,
		cs_section.update_time AS updateTime,
		cs_section.create_time AS createTime,
		cs_section.dr AS dr,
		cs_section.order_num AS orderNum
	</sql>
	<!-- 通用查询条件 -->
	<sql id="base_where">
		WHERE cs_section.dr = 0
	</sql>
	<sql id="where_chapter_course">
		<if test="chapterId != null and chapterId > 0">
			AND cs_section.chapter_id = #{chapterId}
		</if>
		<if test="courseId != null and courseId > 0">
			AND cs_section.course_id = #{courseId}
		</if>
	</sql>
	<!-- 通用from -->
	<sql id="base_from">
        FROM cs_section AS cs_section
	</sql>
	
	
	<sql id="left_join_chapter_colum">
		cs_chapter.chapter_no AS chapterNo,
		cs_chapter.chapter_name AS chapterName
	</sql>
	<sql id="left_join_chapter_from">
		LEFT JOIN cs_chapter AS cs_chapter ON cs_chapter.chapter_id = cs_section.chapter_id
	</sql>
	
	
	
	<!-- 通用排序 -->
	<sql id="base_order">
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by order_num asc,section_no asc
			</otherwise>
		</choose>
	</sql>

	<select id="queryObject" resultType="com.hq.courses.pojo.CsSectionPOJO">
		SELECT
		<include refid="base_column"/>
		,
		<include refid="left_join_chapter_colum"/>
		<include refid="base_from"/>
		<include refid="left_join_chapter_from"/>
		<include refid="base_where"/>
		AND cs_section.section_id = #{sectionId}
	</select>
	<select id="queryObjectByName" resultType="com.hq.courses.entity.CsSectionEntity">
		SELECT
		<include refid="base_column"/>
		<include refid="base_from"/>
		<include refid="base_where"/>
		AND cs_section.section_name = #{sectionName}
		AND cs_section.course_id = #{courseId}
	</select>
	
	<select id="queryList" resultType="com.hq.courses.entity.CsSectionEntity">
		SELECT
		<include refid="base_column"/>
		<include refid="base_from"/>
		<include refid="base_where"/>
		<include refid="where_chapter_course"/>
		<include refid="base_order"/>
		<if test="offset != null and limit != null">
			LIMIT #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		SELECT COUNT(1)
		<include refid="base_from"/>
		<include refid="base_where"/>
		<include refid="where_chapter_course"/>
	</select>
 	<select id="queryCountByParentId" resultType="int" parameterType="long">
		SELECT COUNT(1)
		<include refid="base_from"/>
		<include refid="base_where"/>
		AND cs_section.chapter_id = #{chapterId}
	</select>
	 
	 <select id="queryObjectBySectionNo" resultType="com.hq.courses.entity.CsSectionEntity">
		SELECT
		<include refid="base_column"/>
		<include refid="base_from"/>
		 <include refid="base_where"/>
		<if test="sectionId != null">
				AND cs_section.section_Id != #{sectionId}
		</if>
		<if test="sectionNo != null and sectionNo.trim() != ''">
				AND cs_section.section_no = #{sectionNo}
		</if>
	</select>
	 
	<insert id="save" parameterType="com.hq.courses.entity.CsSectionEntity" useGeneratedKeys="true" keyProperty="sectionId">
		INSERT INTO cs_section
		(
			`section_name`, 
			`section_no`, 
			`chapter_id`, 
			`course_id`, 
			`dr`, 
			`order_num`
		)
		values
		(
			#{sectionName}, 
			#{sectionNo}, 
			#{chapterId}, 
			#{courseId}, 
			#{dr}, 
			#{orderNum}
		)
	</insert>
	 
	<update id="update" parameterType="com.hq.courses.entity.CsSectionEntity">
		UPDATE cs_section 
		<set>
			<if test="sectionName != null">`section_name` = #{sectionName}, </if>
			<if test="sectionNo != null">`section_no` = #{sectionNo}, </if>
			<if test="chapterId != null">`chapter_id` = #{chapterId}, </if>
			<if test="courseId != null">`course_id` = #{courseId}, </if>
			<if test="dr != null">`dr` = #{dr}, </if>
			<if test="orderNum != null">`order_num` = #{orderNum},</if>
			sync_status = 0
		</set>
		<include refid="base_where"/>
		and section_id = #{sectionId}
	</update>
	
	<delete id="delete">
		UPDATE cs_section
		   SET cs_section.`dr` = 1,sync_status = 0
		<include refid="base_where"/>
		 and  section_id = #{sectionId}
	</delete>
	<select id="querySectionIdListByCourseId"  resultType="long">
		SELECT
		section_id as sectionId
		<include refid="base_from"/>
		WHERE cs_section.dr = 0
		AND cs_section.course_id = #{courseId}
	</select>
</mapper>