<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.dao.CourseScoreRecordDetailDao">

		
	<!-- 通用查询表头 -->
	<sql id="base_column">
	course_score_record_detail.score_record_detail_id AS scoreRecordDetailId , 	course_score_record_detail.score_record_id AS scoreRecordId , 	course_score_record_detail.user_id AS userId , 	course_score_record_detail.course_id AS courseId , 	course_score_record_detail.score AS score , 	course_score_record_detail.passed AS passed 	</sql>
	<!-- 通用查询条件 -->
	<sql id="base_where">
    	where 1=1	
    </sql>
	<!-- 通用from -->
	<sql id="base_from">
    	 from course_score_record_detail as course_score_record_detail
	</sql>
	
	<!--根据ID查询-->
	<select id="queryObject" resultType="io.renren.entity.CourseScoreRecordDetailEntity">
		select 
      	<include refid="base_column"/>
		<include refid="base_from"/>
		<include refid="base_where"/>
		AND score_record_detail_id = #{scoreRecordDetailId}
	</select>
	
	<!--分页列表-->
	<select id="queryList" resultType="io.renren.entity.CourseScoreRecordDetailEntity">
		select
		<include refid="base_column"/>
		<include refid="base_from"/> 
		<include refid="base_where"/>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	<!--分页总数-->
 	<select id="queryTotal" resultType="int">
		select count(1) 
		<include refid="base_from"/> 
		<include refid="base_where"/>
	</select>
	<!--新增-->
	<insert id="save" parameterType="io.renren.entity.CourseScoreRecordDetailEntity" useGeneratedKeys="true" keyProperty="scoreRecordDetailId">
		insert into course_score_record_detail
		(
				`score_record_id`, 				
				`user_id`, 				
				`course_id`, 				
				`score`, 				
				`passed`		)
		values
		(
				#{scoreRecordId}, 																			
				#{userId}, 																			
				#{courseId}, 																			
				#{score}, 																			
				#{passed}									
				)
	</insert>
	
	<!--修改-->
	<update id="update" parameterType="io.renren.entity.CourseScoreRecordDetailEntity">
		update course_score_record_detail 
		<set>
			<if test="scoreRecordId != null">`score_record_id` = #{scoreRecordId}, </if>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="courseId != null">`course_id` = #{courseId}, </if>
			<if test="score != null">`score` = #{score}, </if>
			<if test="passed != null">`passed` = #{passed}</if>
		</set>
		<include refid="base_where"/>
		AND score_record_detail_id = #{scoreRecordDetailId}
	</update>
	
	<!--删除-->
	<delete id="delete">
		DELETE FROM course_score_record_detail 
		<include refid="base_where"/>
		AND score_record_detail_id = #{id}
	</delete>
	
	<!--批量删除-->
	<delete id="deleteBatch">
		delete from course_score_record_detail 
		where score_record_id in
		<foreach item="scoreRecordId" collection="ids" open="(" separator="," close=")">
			#{scoreRecordId}
		</foreach>
	</delete>
	<!-- <delete id="deleteBatch">
		DELETE FROM course_score_record_detail 
		<include refid="base_where"/> 
		AND score_record_detail_id IN 
		<foreach item="scoreRecordDetailId" collection="ids" open="(" separator="," close=")">
			#{scoreRecordDetailId}
		</foreach>
	</delete> -->
	<!--根据主表ID查询-->
	<select id="queryAllByPK" resultType="map">
		select
		<include refid="base_column"/>
		, u.nick_name as userName, c.course_name as courseName
		<include refid="base_from"/> 
		, users as u , courses as c 
		<include refid="base_where"/>
		and course_score_record_detail.user_id = u.user_id and course_score_record_detail.course_id = c.course_id
		and score_record_id = #{scoreRecordId}
	</select>
</mapper>