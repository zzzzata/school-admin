<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.dao.SysProductDao">

		
	<!-- 通用查询表头 -->
	<sql id="base_column">
		sys_product.product_id AS productId ,
		sys_product.product_name AS productName , 
		sys_product.remark AS remark , 
		sys_product.ts AS ts ,
		sys_product.status AS status ,
		sys_product.polyvUserId AS polyvuserid ,
		sys_product.polyvSecretKey AS polyvsecretkey,
		sys_product.genseeLoginname AS genseeLoginname,
		sys_product.genseePassword AS genseePassword,
		sys_product.genseeWebcastVodLog AS genseeWebcastVodLog,
		sys_product.genseeWebcastLogUrl AS genseeWebcastLogUrl,
		sys_product.coefficient AS coefficient,
		sys_product.record_efficient AS recordEfficient,
		sys_product.genseeDomain AS genseeDomain
	</sql>
	<!-- 通用from -->
	<sql id="base_from">
    	 FROM sys_product AS sys_product
	</sql>
	<!-- 通用排序 -->
	<sql id="base_order">
    	 ORDER BY  product_id DESC
	</sql>
	
	<!--根据ID查询-->
	<select id="queryObject" resultType="io.renren.entity.SysProductEntity">
		select 
      	<include refid="base_column"/>
		<include refid="base_from"/>
		where sys_product.product_id = #{productId}
	</select>
	<!--根据NAME查询ID-->
	<select id="getProductIdByProductName" resultType="long">
		select 
		sys_product.product_id AS productId 
		<include refid="base_from"/>
		 where sys_product.product_name = #{productName}
	</select>
	<!--分页列表-->
	<select id="queryList" resultType="io.renren.entity.SysProductEntity">
		select
		<include refid="base_column"/>
		<include refid="base_from"/> 
		where 1 = 1
		<if test="productName != null and productName.trim() != ''">
			and sys_product.product_name like concat('%',#{productName},'%')
		</if>
		<include refid="base_order"/>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	<!--弹窗分页列表-->
	<select id="queryList1" resultType="io.renren.entity.SysProductEntity">
		select
		<include refid="base_column"/>
		<include refid="base_from"/> 
		where 1 = 1 and status = 1
		<if test="productName != null and productName.trim() != ''">
			and sys_product.product_name like concat('%',#{productName},'%')
		</if>
		<include refid="base_order"/>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	<!--分页总数-->
 	<select id="queryTotal" resultType="int">
		select count(1) 
		<include refid="base_from"/> 
		where 1 = 1
		<if test="productName != null and productName.trim() != ''">
			and sys_product.product_name like concat('%',#{productName},'%')
		</if>
	</select>
	<!--弹窗分页总数-->
 	<select id="queryTotal1" resultType="int">
		select count(1) 
		<include refid="base_from"/> 
		where 1 = 1 and status = 1
		<if test="productName != null and productName.trim() != ''">
			and sys_product.product_name like concat('%',#{productName},'%')
		</if>
	</select>
	<!--新增-->
	<insert id="save" parameterType="io.renren.entity.SysProductEntity" useGeneratedKeys="true" keyProperty="productId">
		insert into sys_product
		(
			`product_name`, 
			`remark`, `ts`, 
			`status`,
			`polyv_user_id`,
			`polyvSecretKey` 
		)
		values
		(
			#{productName}, 
			#{remark},
			#{ts}, 
			#{status}, 
			#{polyvuserid}, 
			#{polyvsecretkey} 
		)
	</insert>
	
	<!--修改-->
	<update id="update" parameterType="io.renren.entity.SysProductEntity">
		update sys_product 
		<set>
			<if test="productName != null">`product_name` = #{productName}, </if>
			<if test="remark != null">`remark` = #{remark}, </if>
			<if test="ts != null">`ts` = #{ts}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="polyvuserid != null">`polyvUserId` = #{polyvuserid}, </if>
			<if test="polyvsecretkey != null">`polyvSecretKey` = #{polyvsecretkey}</if>
		</set>
		where product_id = #{productId}
	</update>
	
	<!--删除-->
	<delete id="delete">
		DELETE FROM sys_product 
		where product_id = #{id}
	</delete>
	
	<!--批量删除-->
	<delete id="deleteBatch">
		DELETE FROM sys_product 
		where product_id IN 
		<foreach item="productId" collection="ids" open="(" separator="," close=")">
			#{productId}
		</foreach>
	</delete>
	<!-- 批量修改 -->
	<update id="updateBatch">
	   update sys_product set status = #{status} where product_id in
	   <foreach item="productId" collection="list" open="(" separator="," close=")">
	   	#{productId}
		</foreach>
	</update>
	<!-- 根据classplanliveId查询product -->
	<select id="queryByclassplanLiveId" resultType="io.renren.entity.SysProductEntity">
		SELECT sys_product.*
		FROM sys_product 
		JOIN course_classplan ON course_classplan.product_id = sys_product.product_id
		JOIN course_classplan_lives ON course_classplan_lives.classplan_id = course_classplan.classplan_id
		WHERE course_classplan_lives.classplan_live_id = #{classPlanLiveId}
	</select>
	<select id="queryCoefficient" resultType="float">
		select
			sp.coefficient as coefficient
		from
			sys_product as sp
		where
			sp.product_id = #{productId}
	</select>
</mapper>