package ${package}.controller;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.stereotype.Controller;

import ${package}.entity.${className}Entity;
import ${package}.service.${className}Service;
import io.renren.utils.PageUtils;
import io.renren.utils.R;
import io.renren.utils.SchoolIdUtils;


/**
 * ${comments}
 * 
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@Controller
@RequestMapping("${pathName}")
public class ${className}Controller extends AbstractController {
	@Autowired
	private ${className}Service ${classname}Service;
	
	@RequestMapping("/${pathName}.html")
	public String list(){
		return "${pathName}/${pathName}.html";
	}
	
	/**
	 * 列表
	 */
	@ResponseBody
	@RequestMapping("/list")
	@RequiresPermissions("${pathName}:list")
	public R list(HttpServletRequest request){
		Map<String, Object> map = getMapPage(request);
		//查询列表数据
		List<${className}Entity> ${classname}List = ${classname}Service.queryList(map);
		int total = ${classname}Service.queryTotal(map);
		PageUtils pageUtil = new PageUtils(${classname}List, total , request);	
		return R.ok().put(pageUtil);
	}
	
	
	/**
	 * 信息
	 */
	@ResponseBody
	@RequestMapping("/info/{${pk.attrname}}")
	@RequiresPermissions("${pathName}:info")
	public R info(@PathVariable("${pk.attrname}") Long ${pk.attrname} , HttpServletRequest request){
		Map<String, Object> map = getMap(request);
		longQuery(map, request, "${pk.attrname}");
		${className}Entity ${classname} = ${classname}Service.queryObject(map);
		return R.ok().put(${classname});
	}
	
	/**
	 * 保存
	 */
	@ResponseBody
	@RequestMapping("/save")
	@RequiresPermissions("${pathName}:save")
	public R save(@RequestBody ${className}Entity ${classname} , HttpServletRequest request){
		//默认状态
	    ${classname}.setStatus(1);
	    //平台ID
	    ${classname}.setSchoolId(SchoolIdUtils.getSchoolId(request));
	    //创建用户
		${classname}.setCreatePerson(getUserId());
	    //创建时间
		${classname}.setCreationTime(new Date());
		//保存
		${classname}Service.save(${classname});	
		return R.ok();
	}
	
	/**
	 * 修改
	 */
	@ResponseBody
	@RequestMapping("/update")
	@RequiresPermissions("${pathName}:update")
	public R update(@RequestBody ${className}Entity ${classname} , HttpServletRequest request){
		 //平台ID
	    ${classname}.setSchoolId(SchoolIdUtils.getSchoolId(request));
	    //修改用户
		${classname}.setModifyPerson(getUserId());
		//修改时间
		${classname}.setModifiedTime(new Date());
		//修改
		${classname}Service.update(${classname});
		return R.ok();
	}
	
	/**
	 * 删除
	 */
	@ResponseBody
	@RequestMapping("/delete")
	@RequiresPermissions("${pathName}:delete")
	public R delete(@RequestBody ${pk.attrType}[] ${pk.attrname}s , HttpServletRequest request){
		Map<String, Object> map = getMap(request);
		map.put("ids",${pk.attrname}s);
		${classname}Service.deleteBatch(map);	
		return R.ok();
	}
	#*
	/**
	 * 禁用
	 */
	@ResponseBody
	@RequestMapping("/pause")
	@RequiresPermissions("${pathName}:pause")
	public R pause(@RequestBody ${pk.attrType}[] ${pk.attrname}s , HttpServletRequest request){
		${classname}Service.pause(${pk.attrname}s);
		return R.ok();
	}
	
	/**
	 * 启用
	 */
	@ResponseBody
	@RequestMapping("/resume")
	@RequiresPermissions("${pathName}:resume")
	public R resume(@RequestBody ${pk.attrType}[] ${pk.attrname}s , HttpServletRequest request){
		${classname}Service.resume(${pk.attrname}s);
		return R.ok();
	}
	*#
}
